{"ast":null,"code":"import _classCallCheck from \"/home/hwijendra/Work/robot-stimulation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hwijendra/Work/robot-stimulation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hwijendra/Work/robot-stimulation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hwijendra/Work/robot-stimulation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hwijendra/Work/robot-stimulation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hwijendra/Work/robot-stimulation/src/containers/Game.js\";\nimport React, { Component } from 'react';\nimport Grid from '../components/Grid';\nimport Console from '../components/Console';\nimport Command from '../classes/Command';\nimport Robot from '../classes/Robot';\nimport Table from '../classes/Table';\nexport var Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n\n    _this.onHandleCommand = function (e) {\n      try {\n        var command = new Command();\n        command.parse(e);\n\n        var output = _this.robot.nextCommand(command);\n\n        _this.setState({\n          robotPosition: _this.robot.getPosition()\n        });\n\n        if (output) {\n          return {\n            success: true,\n            message: output\n          };\n        } else {\n          return {\n            success: true\n          };\n        }\n      } catch (e) {\n        return {\n          success: false,\n          message: e.message\n        };\n      }\n    };\n\n    _this.state = {\n      robotPosition: {}\n    };\n    _this.table = new Table(5, 5);\n    _this.robot = new Robot(_this.table);\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"main-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"instruction-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Start executing commands on the console. First command must be a PLACE X,Y,F command\", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Example: PLACE 2,3,NORTH | MOVE | LEFT | RIGHT | REPORT \")), React.createElement(\"div\", {\n        className: \"game-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        robotPosition: this.state.robotPosition,\n        table: this.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Console, {\n        onCommand: this.onHandleCommand,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Game;\n}(Component);","map":{"version":3,"sources":["/home/hwijendra/Work/robot-stimulation/src/containers/Game.js"],"names":["React","Component","Grid","Console","Command","Robot","Table","Game","props","onHandleCommand","e","command","parse","output","robot","nextCommand","setState","robotPosition","getPosition","success","message","state","table"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AACI,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;;AADe,UAWnBC,eAXmB,GAWD,UAAAC,CAAC,EAAI;AACnB,UAAI;AACA,YAAMC,OAAO,GAAG,IAAIP,OAAJ,EAAhB;AACAO,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;;AAEA,YAAMG,MAAM,GAAG,MAAKC,KAAL,CAAWC,WAAX,CAAuBJ,OAAvB,CAAf;;AAEA,cAAKK,QAAL,CAAc;AACVC,UAAAA,aAAa,EAAE,MAAKH,KAAL,CAAWI,WAAX;AADL,SAAd;;AAIA,YAAIL,MAAJ,EAAY;AACR,iBAAO;AAAEM,YAAAA,OAAO,EAAE,IAAX;AAAiBC,YAAAA,OAAO,EAAEP;AAA1B,WAAP;AACH,SAFD,MAEO;AACH,iBAAO;AAAEM,YAAAA,OAAO,EAAE;AAAX,WAAP;AACH;AACJ,OAfD,CAeE,OAAOT,CAAP,EAAU;AACR,eAAO;AAAES,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,OAAO,EAAEV,CAAC,CAACU;AAA7B,SAAP;AACH;AACJ,KA9BkB;;AAGf,UAAKC,KAAL,GAAa;AACTJ,MAAAA,aAAa,EAAE;AADN,KAAb;AAIA,UAAKK,KAAL,GAAa,IAAIhB,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAb;AACA,UAAKQ,KAAL,GAAa,IAAIT,KAAJ,CAAU,MAAKiB,KAAf,CAAb;AARe;AASlB;;AAVL;AAAA;AAAA,6BAiCa;AACL,aACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iGAGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAHI,CADA,EAMJ;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAE,KAAKD,KAAL,CAAWJ,aAAhC;AAA+C,QAAA,KAAK,EAAE,KAAKK,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEA,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAE,KAAKb,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CANI,CADJ;AAaH;AA/CL;;AAAA;AAAA,EAA0BR,SAA1B","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '../components/Grid';\nimport Console from '../components/Console';\nimport Command from '../classes/Command';\nimport Robot from '../classes/Robot';\nimport Table from '../classes/Table';\n\nexport class Game extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            robotPosition: {},\n        };\n\n        this.table = new Table(5, 5);\n        this.robot = new Robot(this.table);\n    }\n\n    onHandleCommand = e => {\n        try {\n            const command = new Command();\n            command.parse(e);\n\n            const output = this.robot.nextCommand(command);\n\n            this.setState({\n                robotPosition: this.robot.getPosition(),\n            });\n\n            if (output) {\n                return { success: true, message: output };\n            } else {\n                return { success: true };\n            }\n        } catch (e) {\n            return { success: false, message: e.message };\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"main-container\">\n            <div className=\"instruction-container\">\n            Start executing commands on the console. First command must be a PLACE\n        X,Y,F command\n        <div>Example: PLACE 2,3,NORTH | MOVE | LEFT | RIGHT | REPORT </div>\n        </div>\n        <div className=\"game-container\">\n            <Grid robotPosition={this.state.robotPosition} table={this.table} />\n        <Console onCommand={this.onHandleCommand} />\n        </div>\n        </div>\n    );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}