{"ast":null,"code":"import _toConsumableArray from \"/home/hwijendra/Work/robot-stimulation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/hwijendra/Work/robot-stimulation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hwijendra/Work/robot-stimulation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hwijendra/Work/robot-stimulation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hwijendra/Work/robot-stimulation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hwijendra/Work/robot-stimulation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hwijendra/Work/robot-stimulation/src/components/Grid.js\";\nimport React, { Component } from 'react';\nimport robot from '../assets/robot.jpg';\nimport * as constants from '../constants';\n\nvar Grid =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Grid, _Component);\n\n  function Grid() {\n    _classCallCheck(this, Grid);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Grid).apply(this, arguments));\n  }\n\n  _createClass(Grid, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      // Default direction is south\n      if (this.props.robotPosition.direction) {\n        if (this.props.robotPosition.direction.name === constants.Direction.WEST.name) {\n          return 'rotate-west';\n        } else if (this.props.robotPosition.direction.name === constants.Direction.NORTH.name) {\n          return 'rotate-north';\n        } else if (this.props.robotPosition.direction.name === constants.Direction.EAST.name) {\n          return 'rotate-east';\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var arrayX = [];\n      var arrayY = [];\n\n      for (var x = 0; x < this.props.table.widthX; x++) {\n        arrayX = [].concat(_toConsumableArray(arrayX), [x]);\n      }\n\n      for (var y = 0; y < this.props.table.heightY; y++) {\n        arrayY = [].concat(_toConsumableArray(arrayY), [y]);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, arrayY.map(function (y, indexY) {\n        return React.createElement(\"div\", {\n          key: indexY,\n          className: \"row\",\n          id: indexY,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, arrayX.map(function (x, indexX) {\n          return React.createElement(\"div\", {\n            key: indexX + arrayY.length,\n            className: \"column\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, indexX === _this.props.robotPosition.x && indexY === _this.props.robotPosition.y ? React.createElement(\"img\", {\n            src: robot,\n            alt: \"Logo\",\n            className: _this.getClassName(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }) : '');\n        }));\n      }));\n    }\n  }]);\n\n  return Grid;\n}(Component);\n\nexport { Grid as default };","map":{"version":3,"sources":["/home/hwijendra/Work/robot-stimulation/src/components/Grid.js"],"names":["React","Component","robot","constants","Grid","props","robotPosition","direction","name","Direction","WEST","NORTH","EAST","arrayX","arrayY","x","table","widthX","y","heightY","map","indexY","indexX","length","getClassName"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,cAA3B;;IAEqBC,I;;;;;;;;;;;;;mCACF;AACX;AAEA,UAAI,KAAKC,KAAL,CAAWC,aAAX,CAAyBC,SAA7B,EAAwC;AACpC,YACI,KAAKF,KAAL,CAAWC,aAAX,CAAyBC,SAAzB,CAAmCC,IAAnC,KACAL,SAAS,CAACM,SAAV,CAAoBC,IAApB,CAAyBF,IAF7B,EAGE;AACE,iBAAO,aAAP;AACH,SALD,MAKO,IACH,KAAKH,KAAL,CAAWC,aAAX,CAAyBC,SAAzB,CAAmCC,IAAnC,KACAL,SAAS,CAACM,SAAV,CAAoBE,KAApB,CAA0BH,IAFvB,EAGL;AACE,iBAAO,cAAP;AACH,SALM,MAKA,IACH,KAAKH,KAAL,CAAWC,aAAX,CAAyBC,SAAzB,CAAmCC,IAAnC,KACAL,SAAS,CAACM,SAAV,CAAoBG,IAApB,CAAyBJ,IAFtB,EAGL;AACE,iBAAO,aAAP;AACH;AACJ;AACJ;;;6BAEQ;AAAA;;AACL,UAAIK,MAAM,GAAG,EAAb;AACA,UAAIC,MAAM,GAAG,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKV,KAAL,CAAWW,KAAX,CAAiBC,MAArC,EAA6CF,CAAC,EAA9C,EAAkD;AAC9CF,QAAAA,MAAM,gCAAOA,MAAP,IAAeE,CAAf,EAAN;AACH;;AAED,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKb,KAAL,CAAWW,KAAX,CAAiBG,OAArC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/CJ,QAAAA,MAAM,gCAAOA,MAAP,IAAeI,CAAf,EAAN;AACH;;AAED,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCJ,MAAM,CAACM,GAAP,CAAW,UAACF,CAAD,EAAIG,MAAJ,EAAe;AACnB,eACI;AAAK,UAAA,GAAG,EAAEA,MAAV;AAAkB,UAAA,SAAS,EAAC,KAA5B;AAAkC,UAAA,EAAE,EAAEA,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCR,MAAM,CAACO,GAAP,CAAW,UAACL,CAAD,EAAIO,MAAJ,EAAe;AACnB,iBACI;AAAK,YAAA,GAAG,EAAEA,MAAM,GAAGR,MAAM,CAACS,MAA1B;AAAkC,YAAA,SAAS,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACHD,MAAM,KAAK,KAAI,CAACjB,KAAL,CAAWC,aAAX,CAAyBS,CAApC,IACDM,MAAM,KAAK,KAAI,CAAChB,KAAL,CAAWC,aAAX,CAAyBY,CADnC,GAEG;AACA,YAAA,GAAG,EAAEhB,KADL;AAEJ,YAAA,GAAG,EAAC,MAFA;AAGJ,YAAA,SAAS,EAAE,KAAI,CAACsB,YAAL,EAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH,GAQG,EATA,CADJ;AAcH,SAfJ,CADD,CADJ;AAoBH,OArBJ,CADD,CADJ;AA0BH;;;;EA7D6BvB,S;;SAAbG,I","sourcesContent":["import React, { Component } from 'react';\nimport robot from '../assets/robot.jpg';\nimport * as constants from '../constants';\n\nexport default class Grid extends Component {\n    getClassName() {\n        // Default direction is south\n\n        if (this.props.robotPosition.direction) {\n            if (\n                this.props.robotPosition.direction.name ===\n                constants.Direction.WEST.name\n            ) {\n                return 'rotate-west';\n            } else if (\n                this.props.robotPosition.direction.name ===\n                constants.Direction.NORTH.name\n            ) {\n                return 'rotate-north';\n            } else if (\n                this.props.robotPosition.direction.name ===\n                constants.Direction.EAST.name\n            ) {\n                return 'rotate-east';\n            }\n        }\n    }\n\n    render() {\n        let arrayX = [];\n        let arrayY = [];\n        for (let x = 0; x < this.props.table.widthX; x++) {\n            arrayX = [...arrayX, x];\n        }\n\n        for (let y = 0; y < this.props.table.heightY; y++) {\n            arrayY = [...arrayY, y];\n        }\n\n        return (\n            <div className=\"grid\">\n            {arrayY.map((y, indexY) => {\n                    return (\n                        <div key={indexY} className=\"row\" id={indexY}>\n                        {arrayX.map((x, indexX) => {\n                                return (\n                                    <div key={indexX + arrayY.length} className=\"column\">\n                                {indexX === this.props.robotPosition.x &&\n                                indexY === this.props.robotPosition.y ? (\n                                    <img\n                                    src={robot}\n                                alt=\"Logo\"\n                                className={this.getClassName()}\n                                />\n                            ) : (\n                                    ''\n                                )}\n                            </div>\n                            );\n                            })}\n                        </div>\n                );\n                })}\n            </div>\n    );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}