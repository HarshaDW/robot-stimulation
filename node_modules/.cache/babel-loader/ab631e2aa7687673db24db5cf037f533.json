{"ast":null,"code":"// Errors\nexport var ERR_INVALID_COMMAND = 'Invalid command';\nexport var ERR_INVALID_PLACE_COMMAND = 'Error: Invalid command. syntax PLACE, X,Y,F ';\nexport var ERR_INVALID_FIRST_COMMAND = 'Error: first command should be PLACE';\nexport var ERR_INVALID_ROBOT_POSITION = 'Error: invalid robot position. should be within [5,5] cordinates';\nexport var ERR_INVALID_ROBOT_DIRECTION = 'Error: invalid robot direction.'; // Warnings\n\nexport var WARNING_CANNOT_MOVE = 'Warning: ignoring command, cannot move robot';\nexport var CMD_TYPE_COMMAND = 0;\nexport var CMD_TYPE_ERROR = 1;\nexport var CMD_TYPE_TEXT = 2; // regular expression to match each user inputs\n\nexport var REGEX_USER_INPUT = '\\\\.*([A-Z]+)\\\\s*([0-9]*),*([0-9]*),*([A-Z]+)*\\\\.*';\nexport var Direction = Object.freeze({\n  NORTH: {\n    name: 'NORTH'\n  },\n  SOUTH: {\n    name: 'SOUTH'\n  },\n  EAST: {\n    name: 'EAST'\n  },\n  WEST: {\n    name: 'WEST'\n  }\n});\nexport var CommandInstruction = Object.freeze({\n  PLACE: {\n    name: 'PLACE'\n  },\n  MOVE: {\n    name: 'MOVE'\n  },\n  LEFT: {\n    name: 'LEFT'\n  },\n  RIGHT: {\n    name: 'RIGHT'\n  },\n  REPORT: {\n    name: 'REPORT'\n  }\n});","map":{"version":3,"sources":["/home/hwijendra/Work/robot-stimulation/src/constants.js"],"names":["ERR_INVALID_COMMAND","ERR_INVALID_PLACE_COMMAND","ERR_INVALID_FIRST_COMMAND","ERR_INVALID_ROBOT_POSITION","ERR_INVALID_ROBOT_DIRECTION","WARNING_CANNOT_MOVE","CMD_TYPE_COMMAND","CMD_TYPE_ERROR","CMD_TYPE_TEXT","REGEX_USER_INPUT","Direction","Object","freeze","NORTH","name","SOUTH","EAST","WEST","CommandInstruction","PLACE","MOVE","LEFT","RIGHT","REPORT"],"mappings":"AAAA;AACA,OAAO,IAAMA,mBAAmB,GAAG,iBAA5B;AACP,OAAO,IAAMC,yBAAyB,GAClC,8CADG;AAEP,OAAO,IAAMC,yBAAyB,GAAG,sCAAlC;AACP,OAAO,IAAMC,0BAA0B,GACnC,kEADG;AAEP,OAAO,IAAMC,2BAA2B,GAAG,iCAApC,C,CAEP;;AACA,OAAO,IAAMC,mBAAmB,GAC5B,8CADG;AAGP,OAAO,IAAMC,gBAAgB,GAAG,CAAzB;AACP,OAAO,IAAMC,cAAc,GAAG,CAAvB;AACP,OAAO,IAAMC,aAAa,GAAG,CAAtB,C,CAEP;;AACA,OAAO,IAAMC,gBAAgB,GACzB,mDADG;AAGP,OAAO,IAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc;AACnCC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAD4B;AAEnCC,EAAAA,KAAK,EAAE;AAAED,IAAAA,IAAI,EAAE;AAAR,GAF4B;AAGnCE,EAAAA,IAAI,EAAE;AAAEF,IAAAA,IAAI,EAAE;AAAR,GAH6B;AAInCG,EAAAA,IAAI,EAAE;AAAEH,IAAAA,IAAI,EAAE;AAAR;AAJ6B,CAAd,CAAlB;AAOP,OAAO,IAAMI,kBAAkB,GAAGP,MAAM,CAACC,MAAP,CAAc;AAC5CO,EAAAA,KAAK,EAAE;AAAEL,IAAAA,IAAI,EAAE;AAAR,GADqC;AAE5CM,EAAAA,IAAI,EAAE;AAAEN,IAAAA,IAAI,EAAE;AAAR,GAFsC;AAG5CO,EAAAA,IAAI,EAAE;AAAEP,IAAAA,IAAI,EAAE;AAAR,GAHsC;AAI5CQ,EAAAA,KAAK,EAAE;AAAER,IAAAA,IAAI,EAAE;AAAR,GAJqC;AAK5CS,EAAAA,MAAM,EAAE;AAAET,IAAAA,IAAI,EAAE;AAAR;AALoC,CAAd,CAA3B","sourcesContent":["// Errors\nexport const ERR_INVALID_COMMAND = 'Invalid command';\nexport const ERR_INVALID_PLACE_COMMAND =\n    'Error: Invalid command. syntax PLACE, X,Y,F ';\nexport const ERR_INVALID_FIRST_COMMAND = 'Error: first command should be PLACE';\nexport const ERR_INVALID_ROBOT_POSITION =\n    'Error: invalid robot position. should be within [5,5] cordinates';\nexport const ERR_INVALID_ROBOT_DIRECTION = 'Error: invalid robot direction.';\n\n// Warnings\nexport const WARNING_CANNOT_MOVE =\n    'Warning: ignoring command, cannot move robot';\n\nexport const CMD_TYPE_COMMAND = 0;\nexport const CMD_TYPE_ERROR = 1;\nexport const CMD_TYPE_TEXT = 2;\n\n// regular expression to match each user inputs\nexport const REGEX_USER_INPUT =\n    '\\\\.*([A-Z]+)\\\\s*([0-9]*),*([0-9]*),*([A-Z]+)*\\\\.*';\n\nexport const Direction = Object.freeze({\n    NORTH: { name: 'NORTH' },\n    SOUTH: { name: 'SOUTH' },\n    EAST: { name: 'EAST' },\n    WEST: { name: 'WEST' },\n});\n\nexport const CommandInstruction = Object.freeze({\n    PLACE: { name: 'PLACE' },\n    MOVE: { name: 'MOVE' },\n    LEFT: { name: 'LEFT' },\n    RIGHT: { name: 'RIGHT' },\n    REPORT: { name: 'REPORT' },\n});\n"]},"metadata":{},"sourceType":"module"}