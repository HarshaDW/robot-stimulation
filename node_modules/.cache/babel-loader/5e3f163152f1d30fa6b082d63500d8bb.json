{"ast":null,"code":"import _toConsumableArray from \"/home/hwijendra/Work/robot-stimulation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/hwijendra/Work/robot-stimulation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hwijendra/Work/robot-stimulation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hwijendra/Work/robot-stimulation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hwijendra/Work/robot-stimulation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hwijendra/Work/robot-stimulation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hwijendra/Work/robot-stimulation/src/components/Console.js\";\nimport React, { Component } from 'react';\nimport * as constants from '../constants';\n\nvar Console =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Console, _Component);\n\n  function Console(props) {\n    var _this;\n\n    _classCallCheck(this, Console);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Console).call(this, props));\n\n    _this.handleKeyUpCommand = function (e) {\n      if (e.keyCode === 13) {\n        e.preventDefault();\n        var command = {\n          text: e.target.value,\n          type: constants.CMD_TYPE_COMMAND\n        };\n\n        var result = _this.props.onCommand(e.target.value);\n\n        if (!result.success) {\n          _this.setState({\n            commands: [].concat(_toConsumableArray(_this.state.commands), [command, {\n              text: result.message,\n              type: constants.CMD_TYPE_ERROR\n            }])\n          });\n        } else {\n          if (result.message) {\n            _this.setState({\n              commands: [].concat(_toConsumableArray(_this.state.commands), [command, {\n                text: result.message,\n                type: constants.CMD_TYPE_TEXT\n              }])\n            });\n          } else {\n            _this.setState({\n              commands: [].concat(_toConsumableArray(_this.state.commands), [command])\n            });\n          }\n        }\n\n        e.target.value = '';\n      }\n    };\n\n    _this.state = {\n      commands: []\n    };\n    return _this;\n  }\n\n  _createClass(Console, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.input.focus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"console\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"output\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.commands.map(function (cmd, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          className: cmd.type === constants.CMD_TYPE_ERROR ? 'cmd-error' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"> \", cmd.text);\n      })), React.createElement(\"div\", {\n        className: \"user-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \">\\xA0\"), React.createElement(\"input\", {\n        onKeyUp: this.handleKeyUpCommand,\n        ref: function ref(input) {\n          return _this2.input = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Console;\n}(Component);\n\nexport { Console as default };","map":{"version":3,"sources":["/home/hwijendra/Work/robot-stimulation/src/components/Console.js"],"names":["React","Component","constants","Console","props","handleKeyUpCommand","e","keyCode","preventDefault","command","text","target","value","type","CMD_TYPE_COMMAND","result","onCommand","success","setState","commands","state","message","CMD_TYPE_ERROR","CMD_TYPE_TEXT","input","focus","map","cmd","index"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,SAAZ,MAA2B,cAA3B;;IAEqBC,O;;;;;AACjB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;;AADe,UAYnBC,kBAZmB,GAYE,UAAAC,CAAC,EAAI;AACtB,UAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AAClBD,QAAAA,CAAC,CAACE,cAAF;AAEA,YAAMC,OAAO,GAAG;AACZC,UAAAA,IAAI,EAAEJ,CAAC,CAACK,MAAF,CAASC,KADH;AAEZC,UAAAA,IAAI,EAAEX,SAAS,CAACY;AAFJ,SAAhB;;AAIA,YAAMC,MAAM,GAAG,MAAKX,KAAL,CAAWY,SAAX,CAAqBV,CAAC,CAACK,MAAF,CAASC,KAA9B,CAAf;;AACA,YAAI,CAACG,MAAM,CAACE,OAAZ,EAAqB;AACjB,gBAAKC,QAAL,CAAc;AACVC,YAAAA,QAAQ,+BACD,MAAKC,KAAL,CAAWD,QADV,IAEJV,OAFI,EAGJ;AACIC,cAAAA,IAAI,EAAEK,MAAM,CAACM,OADjB;AAEIR,cAAAA,IAAI,EAAEX,SAAS,CAACoB;AAFpB,aAHI;AADE,WAAd;AAUH,SAXD,MAWO;AACH,cAAIP,MAAM,CAACM,OAAX,EAAoB;AAChB,kBAAKH,QAAL,CAAc;AACVC,cAAAA,QAAQ,+BACD,MAAKC,KAAL,CAAWD,QADV,IAEJV,OAFI,EAGJ;AACIC,gBAAAA,IAAI,EAAEK,MAAM,CAACM,OADjB;AAEIR,gBAAAA,IAAI,EAAEX,SAAS,CAACqB;AAFpB,eAHI;AADE,aAAd;AAUH,WAXD,MAWO;AACH,kBAAKL,QAAL,CAAc;AACVC,cAAAA,QAAQ,+BAAM,MAAKC,KAAL,CAAWD,QAAjB,IAA2BV,OAA3B;AADE,aAAd;AAGH;AACJ;;AAEDH,QAAAA,CAAC,CAACK,MAAF,CAASC,KAAT,GAAiB,EAAjB;AACH;AACJ,KArDkB;;AAGf,UAAKQ,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE;AADD,KAAb;AAHe;AAMlB;;;;wCAEmB;AAChB,WAAKK,KAAL,CAAWC,KAAX;AACH;;;6BA6CQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKL,KAAL,CAAWD,QAAX,CAAoBO,GAApB,CAAwB,UAACC,GAAD,EAAMC,KAAN;AAAA,eACjB;AACJ,UAAA,GAAG,EAAEA,KADD;AAEJ,UAAA,SAAS,EACLD,GAAG,CAACd,IAAJ,KAAaX,SAAS,CAACoB,cAAvB,GAAwC,WAAxC,GAAsD,EAHtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAMEK,GAAG,CAACjB,IANN,CADiB;AAAA,OAAxB,CADD,CADA,EAaJ;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEA;AACA,QAAA,OAAO,EAAE,KAAKL,kBADd;AAEA,QAAA,GAAG,EAAE,aAAAmB,KAAK;AAAA,iBAAK,MAAI,CAACA,KAAL,GAAaA,KAAlB;AAAA,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CAbI,CADJ;AAuBH;;;;EAhFgCvB,S;;SAAhBE,O","sourcesContent":["import React, { Component } from 'react';\nimport * as constants from '../constants';\n\nexport default class Console extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            commands: [],\n        };\n    }\n\n    componentDidMount() {\n        this.input.focus();\n    }\n\n    handleKeyUpCommand = e => {\n        if (e.keyCode === 13) {\n            e.preventDefault();\n\n            const command = {\n                text: e.target.value,\n                type: constants.CMD_TYPE_COMMAND,\n            };\n            const result = this.props.onCommand(e.target.value);\n            if (!result.success) {\n                this.setState({\n                    commands: [\n                        ...this.state.commands,\n                        command,\n                        {\n                            text: result.message,\n                            type: constants.CMD_TYPE_ERROR,\n                        },\n                    ],\n                });\n            } else {\n                if (result.message) {\n                    this.setState({\n                        commands: [\n                            ...this.state.commands,\n                            command,\n                            {\n                                text: result.message,\n                                type: constants.CMD_TYPE_TEXT,\n                            },\n                        ],\n                    });\n                } else {\n                    this.setState({\n                        commands: [...this.state.commands, command],\n                    });\n                }\n            }\n\n            e.target.value = '';\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"console\">\n            <div className=\"output\">\n            {this.state.commands.map((cmd, index) => (\n                    <div\n                key={index}\n                className={\n                    cmd.type === constants.CMD_TYPE_ERROR ? 'cmd-error' : ''\n                }\n                >\n                &gt; {cmd.text}\n                </div>\n    ))}\n    </div>\n        <div className=\"user-input\">\n            <div>&gt;&nbsp;</div>\n        <input\n        onKeyUp={this.handleKeyUpCommand}\n        ref={input => (this.input = input)}\n        />\n        </div>\n        </div>\n    );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}